name: ci-master

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    name: CI Prod
    outputs:
      version: ${{ steps.read_version.outputs.VERSION }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: read version from package.json
        id: read_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: bump version
        id: bump
        uses: cbrgm/semver-bump-action@main
        with:
          current-version: ${{steps.read_version.outputs.VERSION}}
          bump-level: patch

      - name: update package.json version
        run: |
          npm version ${{ steps.bump.outputs.new_version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.bump.outputs.new_version }}"

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build
        env:
          OPENAI_API_KEY: dummy-key
          NEXTAUTH_SECRET: dummy-secret-for-build
          NEXTAUTH_URL: http://localhost:3000
          MONGODB_URI: mongodb://localhost:27017
          MONGODB_DATABASE_NAME: naturescout
          MONGODB_COLLECTION_NAME: analyseJobs
          MAILJET_API_KEY: dummy-key
          MAILJET_API_SECRET: dummy-secret
          MAILJET_FROM_EMAIL: noreply@example.com
          MAILJET_FROM_NAME: NatureScout
          OPENAI_CHAT_MODEL: gpt-4
          OPENAI_VISION_MODEL: gpt-4-vision-preview
          OPENAI_TRANSCRIPTION_MODEL: whisper-1
          AZURE_STORAGE_CONNECTION_STRING: dummy-connection
          AZURE_STORAGE_CONTAINER_NAME: naturescout
          GOOGLE_MAPS_API_KEY: dummy-key
          PLANTNET_API_KEY: dummy-key
          NEXT_PUBLIC_MAX_IMAGE_WIDTH: 2000
          NEXT_PUBLIC_MAX_IMAGE_HEIGHT: 2000
          NEXT_PUBLIC_MAX_IMAGE_QUALITY: 0.8
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          HABITAT_TEST_IMAGES_PATH: /app/public/test-images

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/bcommonslab/nextjs-nature-scout:latest,ghcr.io/bcommonslab/nextjs-nature-scout:${{ steps.bump.outputs.new_version }}
          build-args: |
            VERSION=${{ steps.bump.outputs.new_version }}
            NEXTAUTH_SECRET=dummy-secret-for-build
            NEXTAUTH_URL=http://localhost:3000
            MONGODB_URI=mongodb://localhost:27017
            MONGODB_DATABASE_NAME=naturescout
            MONGODB_COLLECTION_NAME=analyseJobs
            MAILJET_API_KEY=dummy-key
            MAILJET_API_SECRET=dummy-secret
            MAILJET_FROM_EMAIL=noreply@example.com
            MAILJET_FROM_NAME=NatureScout
            OPENAI_API_KEY=dummy-key
            OPENAI_CHAT_MODEL=gpt-4
            OPENAI_VISION_MODEL=gpt-4-vision-preview
            OPENAI_TRANSCRIPTION_MODEL=whisper-1
            AZURE_STORAGE_CONNECTION_STRING=dummy-connection
            AZURE_STORAGE_CONTAINER_NAME=naturescout
            GOOGLE_MAPS_API_KEY=dummy-key
            PLANTNET_API_KEY=dummy-key
            NEXT_PUBLIC_MAX_IMAGE_WIDTH=2000
            NEXT_PUBLIC_MAX_IMAGE_HEIGHT=2000
            NEXT_PUBLIC_MAX_IMAGE_QUALITY=0.8
            NEXT_PUBLIC_BASE_URL=http://localhost:3000
            HABITAT_TEST_IMAGES_PATH=/app/public/test-images
            
      - name: Push version and tag
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }} [skip ci]"
          git tag -a -m "${{ steps.bump.outputs.new_version }}" v${{ steps.bump.outputs.new_version }}
          git push --follow-tags
          
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          generate_release_notes: true
          tag_name: v${{ steps.bump.outputs.new_version }}
      # Dokploy Deployment-Trigger
      - name: Trigger Dokploy deployment
        run: curl -X GET https://dokploy.bcommonslab.org/api/deploy/compose/vGs3CCx-b1TA7AaA_ySmN




