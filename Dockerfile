# --- Build Stage ---
FROM node:20-alpine AS builder

WORKDIR /app

# Build-Args für Umgebungsvariablen definieren
ARG NEXTAUTH_SECRET
ARG NEXTAUTH_URL
ARG MONGODB_URI
ARG MONGODB_DATABASE_NAME
ARG MONGODB_COLLECTION_NAME
ARG MAILJET_API_KEY
ARG MAILJET_API_SECRET
ARG MAILJET_FROM_EMAIL
ARG MAILJET_FROM_NAME
ARG OPENAI_API_KEY
ARG OPENAI_CHAT_MODEL
ARG OPENAI_VISION_MODEL
ARG OPENAI_TRANSCRIPTION_MODEL
ARG AZURE_STORAGE_CONNECTION_STRING
ARG AZURE_STORAGE_CONTAINER_NAME
ARG GOOGLE_MAPS_API_KEY
ARG PLANTNET_API_KEY
ARG NEXT_PUBLIC_MAX_IMAGE_WIDTH
ARG NEXT_PUBLIC_MAX_IMAGE_HEIGHT
ARG NEXT_PUBLIC_MAX_IMAGE_QUALITY
ARG NEXT_PUBLIC_BASE_URL
ARG HABITAT_TEST_IMAGES_PATH
ARG VERSION

# Umgebungsvariablen setzen (mit Dummy-Werten als Fallback für den Build)
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-dummy-secret-for-build}
ENV NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
ENV MONGODB_URI=${MONGODB_URI:-mongodb://localhost:27017}
ENV MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME:-naturescout}
ENV MONGODB_COLLECTION_NAME=${MONGODB_COLLECTION_NAME:-analyseJobs}
ENV MAILJET_API_KEY=${MAILJET_API_KEY:-dummy-key}
ENV MAILJET_API_SECRET=${MAILJET_API_SECRET:-dummy-secret}
ENV MAILJET_FROM_EMAIL=${MAILJET_FROM_EMAIL:-noreply@example.com}
ENV MAILJET_FROM_NAME=${MAILJET_FROM_NAME:-NatureScout}
ENV OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key}
ENV OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL:-gpt-4}
ENV OPENAI_VISION_MODEL=${OPENAI_VISION_MODEL:-gpt-4-vision-preview}
ENV OPENAI_TRANSCRIPTION_MODEL=${OPENAI_TRANSCRIPTION_MODEL:-whisper-1}
ENV AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING:-dummy-connection}
ENV AZURE_STORAGE_CONTAINER_NAME=${AZURE_STORAGE_CONTAINER_NAME:-naturescout}
ENV GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-dummy-key}
ENV PLANTNET_API_KEY=${PLANTNET_API_KEY:-dummy-key}
ENV NEXT_PUBLIC_MAX_IMAGE_WIDTH=${NEXT_PUBLIC_MAX_IMAGE_WIDTH:-2000}
ENV NEXT_PUBLIC_MAX_IMAGE_HEIGHT=${NEXT_PUBLIC_MAX_IMAGE_HEIGHT:-2000}
ENV NEXT_PUBLIC_MAX_IMAGE_QUALITY=${NEXT_PUBLIC_MAX_IMAGE_QUALITY:-0.8}
ENV NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
ENV HABITAT_TEST_IMAGES_PATH=${HABITAT_TEST_IMAGES_PATH:-/app/public/test-images}
ENV VERSION=${VERSION:-0.1.0}

# Build-Zeit Flag setzen
ENV NEXT_RUNTIME=build

# pnpm installieren
RUN corepack enable && corepack prepare pnpm@9.15.3 --activate

# Nur die notwendigen Dateien kopieren
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Restlichen Code kopieren
COPY . .

# Next.js Build
RUN pnpm build

# --- Runtime Stage ---
FROM node:20-alpine AS runner

WORKDIR /app

# Runtime-Umgebungsvariablen
ARG NEXTAUTH_SECRET
ARG NEXTAUTH_URL
ARG MONGODB_URI
ARG MONGODB_DATABASE_NAME
ARG MONGODB_COLLECTION_NAME
ARG MAILJET_API_KEY
ARG MAILJET_API_SECRET
ARG MAILJET_FROM_EMAIL
ARG MAILJET_FROM_NAME
ARG OPENAI_API_KEY
ARG OPENAI_CHAT_MODEL
ARG OPENAI_VISION_MODEL
ARG OPENAI_TRANSCRIPTION_MODEL
ARG AZURE_STORAGE_CONNECTION_STRING
ARG AZURE_STORAGE_CONTAINER_NAME
ARG GOOGLE_MAPS_API_KEY
ARG PLANTNET_API_KEY
ARG NEXT_PUBLIC_MAX_IMAGE_WIDTH
ARG NEXT_PUBLIC_MAX_IMAGE_HEIGHT
ARG NEXT_PUBLIC_MAX_IMAGE_QUALITY
ARG NEXT_PUBLIC_BASE_URL
ARG HABITAT_TEST_IMAGES_PATH
ARG VERSION

# Umgebungsvariablen setzen (zur Runtime die echten Werte verwenden)
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ENV MONGODB_URI=${MONGODB_URI}
ENV MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME}
ENV MONGODB_COLLECTION_NAME=${MONGODB_COLLECTION_NAME}
ENV MAILJET_API_KEY=${MAILJET_API_KEY}
ENV MAILJET_API_SECRET=${MAILJET_API_SECRET}
ENV MAILJET_FROM_EMAIL=${MAILJET_FROM_EMAIL}
ENV MAILJET_FROM_NAME=${MAILJET_FROM_NAME}
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL}
ENV OPENAI_VISION_MODEL=${OPENAI_VISION_MODEL}
ENV OPENAI_TRANSCRIPTION_MODEL=${OPENAI_TRANSCRIPTION_MODEL}
ENV AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
ENV AZURE_STORAGE_CONTAINER_NAME=${AZURE_STORAGE_CONTAINER_NAME}
ENV GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
ENV PLANTNET_API_KEY=${PLANTNET_API_KEY}
ENV NEXT_PUBLIC_MAX_IMAGE_WIDTH=${NEXT_PUBLIC_MAX_IMAGE_WIDTH}
ENV NEXT_PUBLIC_MAX_IMAGE_HEIGHT=${NEXT_PUBLIC_MAX_IMAGE_HEIGHT}
ENV NEXT_PUBLIC_MAX_IMAGE_QUALITY=${NEXT_PUBLIC_MAX_IMAGE_QUALITY}
ENV NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
ENV HABITAT_TEST_IMAGES_PATH=${HABITAT_TEST_IMAGES_PATH}
ENV VERSION=${VERSION}

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NEXT_RUNTIME=runtime

# pnpm installieren
RUN corepack enable && corepack prepare pnpm@8.15.5 --activate

# Nur die notwendigen Dateien kopieren
COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-lock.yaml ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules

# Public-Verzeichnis kopieren (wichtig für statische Assets)
COPY --from=builder /app/public ./public

EXPOSE 3000

# Startbefehl
CMD ["pnpm", "start"] 